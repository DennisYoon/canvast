const basicProperties={width:0,height:0,clearCanvastWhenDone:!1};class Canvast{constructor(t,s=basicProperties){this.properties=s,this.fs=0,this.objects=[],this.taskPause=[],this.nowTaskIdx=0,this.canvas=t.getContext("2d"),console.log(this.nowTaskIdx)}add(t,s){this.objects[t]=s}remove(t){delete this.objects[t]}o(t){return this.objects[t]}wait4(t){this.taskPause[this.nowTaskIdx]=t}classic(t){t(this.canvas)}show(...t){let s=[...t];return new Promise(t=>{let e=s.map(t=>t()),i=Array(e.length).fill(!1);this.taskPause=Array(e.length).fill(0);let a=()=>{if(i.every(t=>t)){this.properties.clearCanvastWhenDone&&this.clearScreen(),t();return}for(let s of(this.clearScreen(),e.forEach((t,s)=>{this.nowTaskIdx=s,this.taskPause[s]>0?this.taskPause[s]--:t.next().done&&(i[s]=!0)}),this.fs++,Object.keys(c.objects).map(t=>c.objects[t])))s.showAt(this.canvas);requestAnimationFrame(a)};a()})}cout(){let t=globalThis;t.add=(t,s)=>this.add(t,s),t.remove=t=>this.remove(t),t.wait4=t=>this.wait4(t),t.classic=t=>this.classic(t)}clearScreen(){this.canvas.fillStyle="white",this.canvas.fillRect(0,0,this.properties.width,this.properties.height)}}class Obj{constructor(){this.basicAtt={visible:!0,fillColor:"red",strokeColor:"red"}}}class Rect extends Obj{constructor(){super(),this.att=Object.assign(Object.assign({},this.basicAtt),{width:10,height:20,x:10,y:10})}showAt(t){let s=this.att;t.fillStyle=s.fillColor,t.strokeStyle=s.strokeColor,t.fillRect(s.x,s.y,s.x+s.width,s.y+s.height)}addWidth(t){this.att.width+=t}setWidth(t){this.att.width=t}addHeight(t){this.att.height+=t}setHeight(t){this.att.height=t}}const canvas=document.querySelector("#canvas1"),c=new Canvast(canvas,{width:400,height:400,clearCanvastWhenDone:!1});function*t1(){yield c.add("redRect",new Rect);for(let t=0;t<100;t++)yield c.o("redRect").addWidth(1)}c.show(t1);

/* minified with toptal.com/developers/javascript-minifier */